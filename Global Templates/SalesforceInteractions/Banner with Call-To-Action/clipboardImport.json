{
    "description": "Banner with Call-To-Action",
    "public": false,
    "files": {
        "template.hbs": {
            "content": "{{!--\n    Global Template: Banner with Call-To-Action\n\n    This global template replaces a banner with a new banner containing a background image and a call-to-action button.\n\n    There are two default Styles: Dark text for lighter backgrounds or light text on darker backgrounds.\n\n    Requirements:\n    1) Set the content zone(s) to that defined in your Sitemap.\n\n    Customizations:\n    1) Style options can be changed in Serverside Code.\n    2) Styling of the Style options, including fallback background color, can be changed in CSS.\n    3) For performance optimization, add an observer selector as a second argument to\n    Evergage.DisplayUtils.pageElementLoaded in Clientside Code that waits for the content zone to load into the DOM.\n    4) Use .before(html) or .after(html) in Clientside Code to render the generated HTML before or after the selected\n    content zone, respectively, instead of replacing the content of the selected content zone.\n    5) To support rich text, add the @richText(true) decorator to configuration properties in Serverside Code.\n    Handlebars expressions for these properties must be wrapped in three sets of curly braces (e.g. {{{expression}}} ).\n    6) Remove or change the default values for the configuration properties in Serverside Code.\n    7) Change the value of the aria-label attributes as necessary.\n    8) Media query breakpoints can be changed in CSS.\n--}}\n\n<div class=\"evg-banner-with-cta evg-jumbotron {{style.className}}\" data-evg-campaign-id=\"{{campaign}}\"\ndata-evg-experience-id=\"{{experience}}\" data-evg-user-group=\"{{userGroup}}\"\naria-label=\"Banner{{#if header}} - {{header}}{{/if}}\" role=\"banner\" style=\"background-image: url({{imageURL}})\">\n    {{#if header}}\n    <h1 class=\"evg-header evg-h1 evg-display-2 {{style.className}}\">\n        {{~header~}}\n    </h1>\n    {{/if}}\n    {{#if subheader}}\n    <h2 class=\"evg-subheader evg-h2 {{style.className}}\">\n        {{~subheader~}}\n    </h2>\n    {{/if}}\n    <a class=\"evg-cta evg-btn evg-btn-primary evg-btn-lg\" href=\"{{ctaUrl}}\" aria-label=\"{{ctaText}}\">\n        {{~ctaText~}}\n    </a>\n</div>\n"
        },
        "template.css": {
            "content": "/* ==========================================================================\n   Banner\n========================================================================== */\n\n.evg-banner-with-cta.evg-jumbotron {\n    position: relative;\n    z-index: 2;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-flow: column nowrap;\n    flex-flow: column nowrap;\n\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n\n    width: 100%;\n    height: 500px;\n    padding: 10px;\n    background-size: cover;\n}\n\n/* ==========================================================================\n   Headers\n========================================================================== */\n\n.evg-banner-with-cta .evg-h1,\n.evg-banner-with-cta .evg-h2 {\n    margin: 0 0 .5rem;\n    padding: 0;\n    color: inherit;\n    font-weight: 500;\n    font-family: inherit;\n    line-height: 1.2;\n}\n\n.evg-banner-with-cta .evg-h1 {\n    font-size: 2.5rem;\n}\n\n.evg-banner-with-cta .evg-h2 {\n    font-size: 2rem;\n}\n\n.evg-banner-with-cta .evg-display-2 {\n    font-size: 5.5rem;\n    font-weight: 700;\n    line-height: 1.2;\n}\n\n.evg-banner-with-cta .evg-header,\n.evg-banner-with-cta .evg-subheader {\n    margin-bottom: 1rem;\n    text-align: center;\n}\n\n/* ==========================================================================\n   Call-To-Action Button\n========================================================================== */\n\n.evg-banner-with-cta .evg-btn {\n    display: inline-block;\n    vertical-align: middle;\n    padding: .5rem 1rem;\n    border: 1px solid transparent;\n    border-radius: 3rem;\n    color: #215ca0;\n    background-color: transparent;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    text-align: center;\n    text-decoration: none;\n    transition:\n        color .15s ease-in-out,\n        background-color .15s ease-in-out,\n        border-color .15s ease-in-out,\n        box-shadow .15s ease-in-out;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.evg-banner-with-cta .evg-btn-lg {\n    padding: .5rem 2rem;\n    font-size: 1.25rem;\n}\n\n.evg-banner-with-cta .evg-btn-primary {\n    border-color: #215ca0;\n    color: #fff;\n    background-color: #215ca0;\n    transition: background-color .15s, color .15s;\n}\n\n.evg-banner-with-cta .evg-btn-primary:hover {\n    border-color: #1c4e88;\n    color: #fff;\n    background-color: #1c4e88;\n}\n\n/* ==========================================================================\n   Style\n========================================================================== */\n\n.evg-banner-with-cta.evg-dark-on-light {\n    background-color: #fff;\n}\n\n.evg-banner-with-cta.evg-light-on-dark {\n    background-color: #343a40;\n}\n\n.evg-banner-with-cta .evg-h1.evg-dark-on-light,\n.evg-banner-with-cta .evg-h2.evg-dark-on-light {\n    color: #343a40;\n}\n\n.evg-banner-with-cta .evg-h1.evg-light-on-dark,\n.evg-banner-with-cta .evg-h2.evg-light-on-dark {\n    color: #fff;\n}\n\n/* ==========================================================================\n   Media Queries\n========================================================================== */\n\n@media screen and (max-width: 991px) {\n    .evg-banner-with-cta .evg-h2 {\n        font-size: 1.5rem;\n    }\n\n    .evg-banner-with-cta .evg-display-2 {\n        font-size: 3.75rem;\n    }\n\n    .evg-banner-with-cta .evg-btn-lg {\n        font-size: 1rem;\n    }\n}\n"
        },
        "template.js": {
            "content": "(function() {\n\n    /**\n     * @function buildBindId\n     * @param {Object} context\n     * @description Create unique bind ID based on the campaign and experience IDs.\n     */\n    function buildBindId(context) {\n        return `${context.campaign}:${context.experience}`;\n    }\n\n    function apply(context, template) {\n        const contentZoneSelector = SalesforceInteractions.mcis.getContentZoneSelector(context.contentZone);\n\n        /**\n         * The pageElementLoaded method waits for the content zone to load into the DOM\n         * before rendering the template. The observer element that monitors for the content\n         * zone element to get inserted into its DOM node is set to \"body\" by default.\n         * For performance optimization, this default can be overridden by adding\n         * a second selector argument, which will be used as the observer element instead.\n         *\n         * Visit the Template Display Utilities documentation to learn more:\n         * https://developer.salesforce.com/docs/marketing/personalization/guide/web-template-display-utilities\n         */\n        return SalesforceInteractions.DisplayUtils\n            .bind(buildBindId(context))\n            .pageElementLoaded(contentZoneSelector)\n            .then((element) => {\n                const html = template(context);\n                SalesforceInteractions.cashDom(element).html(html);\n            });\n    }\n\n    function reset(context, template) {\n        SalesforceInteractions.DisplayUtils.unbind(buildBindId(context));\n        SalesforceInteractions.cashDom(`[data-evg-campaign-id=\"${context.campaign}\"][data-evg-experience-id=\"${context.experience}\"]`)\n            .remove();\n    }\n\n    function control(context) {\n        const contentZoneSelector = SalesforceInteractions.mcis.getContentZoneSelector(context.contentZone);\n        return SalesforceInteractions.DisplayUtils\n            .bind(buildBindId(context))\n            .pageElementLoaded(contentZoneSelector)\n            .then((element) => {\n                SalesforceInteractions.cashDom(element).attr({\n                    \"data-evg-campaign-id\": context.campaign,\n                    \"data-evg-experience-id\": context.experience,\n                    \"data-evg-user-group\": context.userGroup\n                });\n            });\n    }\n\n    registerTemplate({\n        apply: apply,\n        reset: reset,\n        control: control\n    });\n\n})();\n"
        },
        "template.ts": {
            "content": "export class StyleField {\n    label: string;\n    className: string;\n}\n\nexport class BannerWithCTATemplate implements CampaignTemplateComponent {\n\n    @title(\"Background Image URL\")\n    @subtitle(\"Replace the placeholder image URL with the image URL for your background image.\")\n    imageURL: string = \"https://cdn.evergage.com/evergage-content/nto/nto_hero_banner_bike.jpg\";\n\n    @subtitle(\"Define header and subheader text styling.\")\n    @options([\n        { label: \"Light on Dark\", className: \"evg-light-on-dark\" },\n        { label: \"Dark on Light\", className: \"evg-dark-on-light\" }\n    ])\n    style: StyleField = { label: \"Light on Dark\", className: \"evg-light-on-dark\" };\n\n    @subtitle(\"Optional text field\")\n    header: string = \"Header Text\";\n\n    @subtitle(\"Optional text field\")\n    subheader: string = \"Subheader Text\";\n\n    @title(\"CTA Text\")\n    ctaText: string = \"Call To Action\";\n\n    @title(\"CTA Destination URL\")\n    @subtitle(\"Requires full URL string including https://\")\n    ctaUrl: string = \"https://www.northerntrailoutfitters.com\";\n\n    run(context: CampaignComponentContext) {\n        return {};\n    }\n\n}\n"
        }
    }
}