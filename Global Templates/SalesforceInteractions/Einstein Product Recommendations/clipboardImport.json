{
    "description": "Einstein Product Recommendations",
    "public": false,
    "files": {
        "template.hbs": {
            "content": "{{!--\n    Global Template: Einstein Product Recommendations\n\n    This global template inserts a row of recommended products, based on a selected Einstein Recipe.\n\n    Requirements:\n    1) Set the content zone(s) to that defined in your Sitemap.\n\n    Customizations:\n    1) For performance optimization, add an observer selector as a second argument to\n    Evergage.DisplayUtils.pageElementLoaded in Clientside Code that waits for the content zone to load into the DOM.\n    2) Use .before(html) or .after(html) in Clientside Code to insert the generated HTML content before or after the\n    content zone, respectively, instead of replacing the content of the content zone with .html(html).\n    3) To support rich text, add the @richText(true) decorator to configuration properties in Serverside Code.\n    Handlebars expressions for these properties must be wrapped in three sets of curly braces (e.g. {{{expression}}} ).\n    4) Ratings are styled using the current rating value and a maxRatingBound, which is defined in the configuration\n    properties in Serverside Code and defaults to 5. If you know that ratings captured in the sitemap are on a scale\n    of 5, then there's no need to change this value.\n    5) Remove or change the default values for the configuration properties in Serverside Code.\n    6) Change the values of aria-label attributes as necessary.\n    7) Media query breakpoints can be changed in CSS.\n--}}\n\n<section class=\"evg-einstein-product-recs\" data-evg-campaign-id=\"{{campaign}}\" data-evg-experience-id=\"{{experience}}\"\ndata-evg-user-group=\"{{userGroup}}\" aria-label=\"Product Recommendations{{#if header}} - {{header}}{{/if}}\">\n    {{#if header}}\n    <h3 class=\"evg-header evg-h3\">\n        {{~header~}}\n    </h3>\n    {{/if}}\n    <div class=\"evg-product-recs\">\n        {{~#each products}}\n        <article class=\"evg-product-rec\" data-evg-item-id=\"{{id}}\" data-evg-item-type=\"{{../itemType}}\"\n        style=\"max-width: calc((1 / {{../maximumNumberOfProducts}} * 100%));\">\n            <a href=\"{{attributes.url.value}}\">\n                <img class=\"evg-product-img\" src=\"{{attributes.imageUrl.value}}\" alt=\"{{attributes.name.value}}\"/>\n            </a>\n            <div class=\"evg-product-details\">\n                {{#if ../nameVisibility}}\n                <a class=\"evg-product-name\" href=\"{{attributes.url.value}}\">\n                    {{~attributes.name.value~}}\n                </a>\n                {{/if}}\n                {{#if ../descriptionVisibility}}\n                    {{#if attributes.description.value}}\n                    <div class=\"evg-product-description\">\n                        {{~attributes.description.value~}}\n                    </div>\n                    {{/if}}\n                {{/if}}\n                {{#if ../priceVisibility}}\n                <div class=\"evg-product-price\">${{~attributes.price.value~}}</div>\n                {{/if}}\n                {{#if ../ratingVisibility}}\n                <div class=\"evg-product-rating\" aria-label=\"Rating: {{attributes.rating.value}}\">\n                    <div class=\"evg-star-empty\"\n                    eg-ratings=\"{{#if attributes.rating.value}}{{attributes.rating.value}}{{else}}0{{/if}}\"\n                    style=\"width: auto\">\n                        ★★★★★\n                    </div>\n                    <div class=\"evg-star-fill\"\n                    style=\"width: calc(({{#if attributes.rating.value}}{{attributes.rating.value}}{{else}}0{{/if}} / {{../maxRatingBound}}) * 100%);\">\n                        ★★★★★\n                    </div>\n                </div>\n                {{/if}}\n            </div>\n        </article>\n        {{/each~}}\n    </div>\n</section>\n"
        },
        "template.css": {
            "content": "/* ==========================================================================\n   Recommendations Block\n========================================================================== */\n\n.evg-einstein-product-recs {\n    width: 100%;\n    max-width: 1440px;\n    margin: 2rem auto;\n    color: inherit;\n    font-family: inherit;\n}\n\n.evg-einstein-product-recs .evg-product-recs {\n    position: relative;\n    z-index: 2;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-flow: row nowrap;\n    flex-flow: row nowrap;\n\n    -webkit-box-pack: space-between;\n    -ms-flex-pack: space-between;\n    justify-content: space-between;\n\n    -webkit-box-align: stretch;\n    -ms-flex-align: stretch;\n    align-items: stretch;\n\n    width: auto;\n    height: 100%;\n    padding: 0;\n}\n\n/* ==========================================================================\n   Headers\n========================================================================== */\n\n.evg-einstein-product-recs .evg-h3 {\n    margin: 0 0 .5rem;\n    padding: 0;\n    color: inherit;\n    font-size: 1.75rem;\n    font-weight: 500;\n    font-family: inherit;\n    line-height: 1.2;\n}\n\n.evg-einstein-product-recs .evg-header {\n    width: 100%;\n    margin: 1rem 0 2rem;\n    text-align: center;\n}\n\n/* ==========================================================================\n   Individual Product Recommendation\n========================================================================== */\n\n.evg-einstein-product-recs .evg-product-rec {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-flow: column nowrap;\n    flex-flow: column nowrap;\n\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n\n    -webkit-box-align: end;\n    -ms-flex-align: end;\n    align-items: flex-end;\n\n    width: auto;\n    margin: 0;\n    padding: 0 .5rem;\n    text-align: center;\n}\n\n.evg-einstein-product-recs .evg-product-rec > a,\n.evg-einstein-product-recs .evg-product-rec .evg-product-details {\n    background-color: #fff;\n}\n\n.evg-einstein-product-recs .evg-product-img {\n    width: 80%;\n    height: auto;\n}\n\n.evg-einstein-product-recs .evg-product-details {\n    width: 100%;\n    height: 100%;\n    min-height: 9rem;\n    padding: .5rem;\n}\n\n.evg-einstein-product-recs .evg-product-name {\n    display: block;\n    min-height: 2.5rem;\n    margin: auto auto .25rem;\n    color:#393939;\n    font-size: 1rem;\n    font-weight: 600;\n    line-height: 1.25rem;\n    text-decoration: none;\n}\n\n.evg-einstein-product-recs .evg-product-description {\n    overflow: hidden;\n    max-height: 2rem;\n    margin: 0 auto;\n    font-size: .85rem;\n    line-height: 1rem;\n}\n\n.evg-einstein-product-recs .evg-product-description,\n.evg-einstein-product-recs .evg-product-price,\n.evg-einstein-product-recs .evg-product-rating {\n    margin-bottom: .5rem;\n}\n\n.evg-einstein-product-recs .evg-product-rating {\n    width: 5rem;\n    margin-right: auto;\n    margin-left: auto;\n    text-align: left;\n    text-decoration: none;\n}\n\n.evg-einstein-product-recs .evg-star-empty,\n.evg-einstein-product-recs .evg-star-full {\n    height: 1.5em;\n    text-align: left;\n    text-decoration: none;\n}\n\n.evg-einstein-product-recs .evg-star-empty {\n    color: #dee3e8;\n    background-color: #fff;\n}\n\n.evg-einstein-product-recs .evg-star-fill {\n    position: relative;\n    overflow: hidden;\n    margin-top: -1.5em;\n    color: #ce763c;\n    background-color: transparent;\n}\n\n/* ==========================================================================\n   Media Queries\n========================================================================== */\n\n@media screen and (max-width: 991px) {\n    .evg-einstein-product-recs .evg-product-recs {\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n        -ms-flex-flow: row wrap;\n        flex-flow: row wrap;\n\n        max-width: 720px;\n        margin-right: auto;\n        margin-left: auto;\n        padding-right: 15px;\n        padding-left: 15px;\n    }\n\n    .evg-einstein-product-recs .evg-product-rec {\n        max-width: calc(50% - 1rem) !important;\n        margin-bottom: 2rem;\n        padding: 1rem 0;\n    }\n}\n\n@media screen and (max-width: 767px) {\n    .evg-einstein-product-recs .evg-product-recs {\n        max-width: 540px;\n    }\n}\n\n@media screen and (max-width: 575px) {\n    .evg-einstein-product-recs .evg-product-name {\n        min-height: 3rem;\n    }\n}\n"
        },
        "template.js": {
            "content": "(function() {\n\n    /**\n     * @function buildBindId\n     * @param {Object} context\n     * @description Create unique bind ID based on the campaign and experience IDs.\n     */\n    function buildBindId(context) {\n        return `${context.campaign}:${context.experience}`;\n    }\n\n    function apply(context, template) {\n        const contentZoneSelector = SalesforceInteractions.mcis.getContentZoneSelector(context.contentZone);\n\n        /**\n         * The pageElementLoaded method waits for the content zone to load into the DOM\n         * before rendering the template. The observer element that monitors for the content\n         * zone element to get inserted into its DOM node is set to \"body\" by default.\n         * For performance optimization, this default can be overridden by adding\n         * a second selector argument, which will be used as the observer element instead.\n         *\n         * Visit the Template Display Utilities documentation to learn more:\n         * https://developer.salesforce.com/docs/marketing/personalization/guide/web-template-display-utilities\n         */\n        return SalesforceInteractions.DisplayUtils\n            .bind(buildBindId(context))\n            .pageElementLoaded(contentZoneSelector)\n            .then((element) => {\n                const html = template(context);\n                SalesforceInteractions.cashDom(element).html(html);\n            });\n    }\n\n    function reset(context, template) {\n        SalesforceInteractions.DisplayUtils.unbind(buildBindId(context));\n        SalesforceInteractions.cashDom(`[data-evg-campaign-id=\"${context.campaign}\"][data-evg-experience-id=\"${context.experience}\"]`)\n            .remove();\n    }\n\n    function control(context) {\n        const contentZoneSelector = SalesforceInteractions.mcis.getContentZoneSelector(context.contentZone);\n        return SalesforceInteractions.DisplayUtils\n            .bind(buildBindId(context))\n            .pageElementLoaded(contentZoneSelector)\n            .then((element) => {\n                SalesforceInteractions.cashDom(element).attr({\n                    \"data-evg-campaign-id\": context.campaign,\n                    \"data-evg-experience-id\": context.experience,\n                    \"data-evg-user-group\": context.userGroup\n                });\n            });\n    }\n\n    registerTemplate({\n        apply: apply,\n        reset: reset,\n        control: control\n    });\n\n})();\n"
        },
        "template.ts": {
            "content": "import { RecommendationsConfig, recommend } from \"recs\";\n\nexport class EinsteinProductRecsTemplate implements CampaignTemplateComponent {\n\n    /**\n     * Developer Controls\n     */\n\n    @hidden(true)\n    maximumNumberOfProducts: 2 | 4 | 6 | 8 = 4;\n\n    @hidden(true)\n    maxRatingBound: number = 5;\n\n    /**\n     * Business-User Controls\n     */\n\n    @title(\"Recommendations Block Title\")\n    header: string = \"Title Text\";\n\n    @title(\" \")\n    recsConfig: RecommendationsConfig = new RecommendationsConfig()\n        .restrictItemType(\"Product\")\n        .restrictMaxResults(this.maximumNumberOfProducts);\n\n    @header(\"Recommendation Display Attributes\")\n\n    @title(\"Show product name\")\n    nameVisibility: boolean = true;\n\n    @title(\"Show product description\")\n    descriptionVisibility: boolean = true;\n\n    @title(\"Show product price\")\n    priceVisibility: boolean = true;\n\n    @title(\"Show product rating\")\n    ratingVisibility: boolean = false;\n\n    run(context: CampaignComponentContext) {\n        this.recsConfig.maxResults = this.maximumNumberOfProducts;\n\n        return {\n            itemType: this.recsConfig.itemType,\n            products: recommend(context, this.recsConfig)\n        };\n    }\n\n}\n"
        }
    }
}