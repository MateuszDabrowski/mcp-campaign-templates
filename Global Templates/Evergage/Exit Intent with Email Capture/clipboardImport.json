{
    "description": "Exit Intent with Email Capture",
    "public": false,
    "files": {
        "template.hbs": {
            "content": "{{!--\n    Global Template: Exit Intent Pop-Up with Email Capture\n\n    This global template displays a popup with an email capture when a user intends to exit the page.\n\n    There are two default Styles: Dark text for lighter backgrounds or light text on darker backgrounds.\n\n    Requirements:\n    1) Set the content zone(s) to that defined in your Sitemap.\n    2) Create a user attribute `emailAddress` to save the user's email to.\n\n    Customizations:\n    1) As a best practice, set the content zone to \"global_popup\". See https://developer.evergage.com/websdk/contentzones\n    for recommended names for content zones mapped via Sitemap.\n    2) Style options can be changed in Serverside Code.\n    3) Styling of the Style options, including fallback background color, can be changed in CSS.\n    4) Remove or change the default values for the configuration properties in Serverside Code.\n    5) Once validated, the user's email address will be sent to Interaction Studio and set to the user's\n    emailAddress attribute.\n    6) Media query breakpoints can be changed in CSS.\n    7) To support rich text, add the @richtext(true) decorator to configuration properties in Serverside Code.\n    Handlebars expressions for these properties must be wrapped in three sets of curly braces (e.g. {{{expression}}} ).\n    8) Change the value of the aria-label attributes as necessary.\n    9) Change the error message in the .evg-error-msg. Styling can be changed in CSS.\n--}}\n\n<div id=\"evg-exit-intent-popup-email-capture\" data-evg-campaign-id=\"{{campaign}}\"\ndata-evg-experience-id=\"{{experience}}\" data-evg-user-group=\"{{userGroup}}\" aria-label=\"Popup{{#if header}} - {{header}}{{/if}}\"\nrole=\"dialog\" aria-modal=\"true\" aria-hidden=\"false\">\n\n    {{#if lightbox}}\n    <div class=\"evg-overlay\" data-evg-dismissal></div>\n    {{/if}}\n\n    <div class=\"evg-popup evg-style-bg {{style.className}}\" style=\"background-image:url('{{imageUrl}}')\">\n        <div class=\"evg-main-panel\">\n            <h1 class=\"evg-header evg-h1 evg-display-4 evg-style-text {{style.className}}\">\n                {{header}}\n            </h1>\n            <h2 class=\"evg-subheader evg-h2 evg-style-text {{style.className}}{{#unless mainSubheaderVisibility}} evg-hide{{/unless}}\">\n                {{subheader}}\n            </h2>\n            <form class=\"evg-form\" aria-label=\"Email Signup\" role=\"form\">\n                <input class=\"evg-email\" name=\"email\" type=\"email\" required placeholder=\"Email\" novalidate\n                aria-label=\"Email\" aria-required=\"true\" tabindex=\"0\">\n                <span class=\"evg-error-msg evg-hide\">\n                    Enter a valid email address\n                </span>\n                <button class=\"evg-cta evg-btn evg-btn-primary evg-btn-lg {{style.className}}\" onsubmit=\"return false;\" tabindex=\"1\"\n                type=\"button\" aria-label=\"Submit\">\n                    {{ctaText}}\n                </button>\n            </form>\n            <span class=\"evg-opt-out-msg evg-style-text {{style.className}}\" tabindex=\"2\" data-evg-dismissal>\n                {{optOutText}}\n            </span>\n        </div>\n        <div class=\"evg-confirm-panel evg-hide\">\n            <h1 class=\"evg-confirm-header evg-h1 evg-style-text {{style.className}}\">\n                {{confirmationHeader}}\n            </h1>\n            <h2 class=\"evg-confirm-subheader evg-h2 evg-style-text {{style.className}}{{#unless confSubheaderVisibility}} evg-hide{{/unless}}\">\n                {{confirmationSubheader}}\n            </h2>\n        </div>\n        <button class=\"evg-btn-dismissal evg-style-text {{style.className}}\" data-evg-dismissal\n        aria-label=\"Close Popup\" tabindex=\"3\">&times;</button>\n    </div>\n</div>"
        },
        "template.css": {
            "content": "/* ==========================================================================\n   Pop-up\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture {\n    position: relative;\n    z-index: 10000000;\n}\n\n#evg-exit-intent-popup-email-capture .evg-overlay {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: .3;\n    width: 100%;\n    height: 100%;\n    background-color: #000;\n}\n\n#evg-exit-intent-popup-email-capture .evg-popup {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    width: 500px;\n    height: 500px;\n    padding: 20px;\n    background-color: #fff;\n    background-position: center bottom;\n    background-size: cover;\n    background-repeat: no-repeat;\n    transform: translateX(-50%) translateY(-50%);\n}\n\n#evg-exit-intent-popup-email-capture .evg-btn-dismissal {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 0 .5rem;\n    border: 1px solid transparent;\n    background-color: transparent;\n    font-size: 2rem;\n    font-weight: 700;\n    line-height: 1;\n    cursor: pointer;\n}\n\n#evg-exit-intent-popup-email-capture .evg-main-panel,\n#evg-exit-intent-popup-email-capture .evg-confirm-panel {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n\n    width: 100%;\n    height: 100%;\n    text-align: center;\n}\n\n#evg-exit-intent-popup-email-capture .evg-confirm-header {\n    display: inline-block;\n    margin: 0 0 .5rem;\n}\n\n#evg-exit-intent-popup-email-capture .evg-confirm-subheader {\n    display: inline-block;\n    margin: 0 0 .5rem;\n}\n\n#evg-exit-intent-popup-email-capture .evg-opt-out-msg {\n    font-size: 1rem;\n    text-decoration: underline;\n    cursor: pointer;\n}\n\n/* ==========================================================================\n   Form\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture .evg-form {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n\n    width: 100%;\n    text-align: center;\n}\n\n#evg-exit-intent-popup-email-capture .evg-email {\n    width: 75%;\n    margin: .5rem 0;\n    padding: .5rem 1rem;\n    border: 1px solid #ddd;\n    color: #59575c;\n}\n\n/* ==========================================================================\n   Headers\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture .evg-h1,\n#evg-exit-intent-popup-email-capture .evg-h2 {\n    margin: 0 0 .5rem;\n    padding: 0;\n    color: inherit;\n    font-weight: 500;\n    font-family: inherit;\n    line-height: 1.2;\n}\n\n#evg-exit-intent-popup-email-capture .evg-h1.evg-display-4 {\n    font-size: 3.5rem;\n    font-weight: 700;\n    line-height: 1.2;\n}\n\n#evg-exit-intent-popup-email-capture .evg-h2 {\n    font-size: 1.5rem;\n}\n\n/* ==========================================================================\n   Call-To-Action Button\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture .evg-btn {\n    display: inline-block;\n    vertical-align: middle;\n    padding: .5rem 1rem;\n    border: 1px solid transparent;\n    border-radius: 3rem;\n    color: #215ca0;\n    background-color: transparent;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    text-align: center;\n    text-decoration: none;\n    transition:\n        color .15s ease-in-out,\n        background-color .15s ease-in-out,\n        border-color .15s ease-in-out,\n        box-shadow .15s ease-in-out;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n#evg-exit-intent-popup-email-capture .evg-btn-primary {\n    border-color: #215ca0;\n    color: #fff;\n    background-color: #215ca0;\n    transition: background-color .15s, color .15s;\n}\n\n#evg-exit-intent-popup-email-capture .evg-btn-lg {\n    padding: .5rem 2rem;\n    font-size: 1.25rem;\n}\n\n#evg-exit-intent-popup-email-capture .evg-cta {\n    margin: .5rem 0;\n}\n\n/* ==========================================================================\n   Error Message\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture .evg-error-msg {\n    color: #ff0000;\n    font-size: 1rem;\n}\n\n/* ==========================================================================\n   Style\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture .evg-style-bg.evg-light-on-dark {\n    background-color: #343a40;\n}\n\n#evg-exit-intent-popup-email-capture .evg-style-bg.evg-dark-on-light {\n    background-color: #fff;\n}\n\n#evg-exit-intent-popup-email-capture .evg-style-text.evg-light-on-dark {\n    color: #fff;\n}\n\n#evg-exit-intent-popup-email-capture .evg-style-text.evg-dark-on-light {\n    color: #343a40;\n}\n\n/* ==========================================================================\n   Visibility\n========================================================================== */\n\n#evg-exit-intent-popup-email-capture .evg-hide {\n    visibility: hidden;\n    display: none;\n    width: 0;\n    height: 0;\n}\n\n/* ==========================================================================\n   Media Queries\n========================================================================== */\n\n@media screen and (max-height: 500px) {\n    #evg-exit-intent-popup-email-capture .evg-popup {\n        height: 90vh;\n    }\n}\n\n@media screen and (max-width: 575px) {\n    #evg-exit-intent-popup-email-capture .evg-popup {\n        width: 90vw;\n    }\n\n    #evg-exit-intent-popup-email-capture .evg-h1.evg-display-4 {\n        font-size: 2.75rem;\n    }\n\n    #evg-exit-intent-popup-email-capture .evg-h2 {\n        font-size: 1.2rem;\n    }\n\n    #evg-exit-intent-popup-email-capture .evg-btn-lg {\n        font-size: 1rem;\n    }\n\n   #evg-exit-intent-popup-email-capture .evg-error-msg,\n   #evg-exit-intent-popup-email-capture .evg-opt-out-msg {\n        font-size: .85rem;\n    }\n}\n"
        },
        "template.js": {
            "content": "(function() {\n\n    const pageExitMillis = 500;\n\n    /**\n     * @function buildBindId\n     * @param {Object} context\n     * @description Create unique bind ID based on the campaign and experience IDs.\n     */\n    function buildBindId(context) {\n        return `${context.campaign}:${context.experience}`;\n    }\n\n    /**\n     * @function setConfirmationPanel\n     * @description Add click listener to the Call-To-Action button that validates the user email address,\n     * shows the Confirmation Panel, removes dismissal tracking from the \"X\" button and overlay, and sends\n     * an event to Interaction Studio to set the emailAddress attribute to the user email address.\n     */\n    function setConfirmationPanel() {\n        Evergage.cashDom(\"#evg-exit-intent-popup-email-capture .evg-cta\").on(\"click\", () => {\n            const emailAddress = Evergage.cashDom(\".evg-form input[placeholder='Email']\").val();\n            const regex = RegExp(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]+)$/);\n            if (emailAddress && regex.test(emailAddress)) {\n                Evergage.cashDom(\"#evg-exit-intent-popup-email-capture .evg-main-panel\").addClass(\"evg-hide\");\n                Evergage.cashDom(\"#evg-exit-intent-popup-email-capture .evg-confirm-panel\").removeClass(\"evg-hide\");\n                Evergage.cashDom(`\n                    #evg-exit-intent-popup-email-capture .evg-overlay,\n                    #evg-exit-intent-popup-email-capture .evg-btn-dismissal\n                `).removeAttr(\"data-evg-dismissal\");\n                Evergage.sendEvent({\n                    user: {\n                        attributes: {\n                            emailAddress: emailAddress\n                        }\n                    }\n                });\n            } else {\n                Evergage.cashDom(\"#evg-exit-intent-popup-email-capture .evg-error-msg\")\n                    .removeClass(\"evg-hide\")\n                    .addClass(\"evg-error\");\n            }\n        });\n    }\n\n    /**\n     * @function setDismissal\n     * @param {Object} context\n     * @description Add click listener to the overlay, \"X\" button, and opt-out text that removes the\n     * template from the DOM.\n     */\n    function setDismissal(context) {\n        const dismissSelectors = `\n            #evg-exit-intent-popup-email-capture .evg-overlay,\n            #evg-exit-intent-popup-email-capture .evg-btn-dismissal,\n            #evg-exit-intent-popup-email-capture .evg-opt-out-msg\n        `;\n\n        Evergage.cashDom(dismissSelectors).on(\"click\", () => {\n            Evergage.cashDom(\"#evg-exit-intent-popup-email-capture\").remove();\n        });\n    }\n\n    function apply(context, template) {\n\n        /**\n         * The pageExit method waits for the user's cursor to exit through the top edge of the page before rendering the\n         * template after a set delay.\n         *\n         * Visit the Template Display Utilities documentation to learn more:\n         * https://developer.evergage.com/templates/display-utilities\n         */\n        return Evergage.DisplayUtils.bind(buildBindId(context)).pageExit(pageExitMillis).then(() => {\n            if (Evergage.cashDom(\"#evg-exit-intent-popup\").length > 0) return;\n\n            const html = template(context);\n            Evergage.cashDom(\"body\").append(html);\n            setConfirmationPanel();\n            setDismissal(context);\n        });\n    }\n\n    function reset(context, template) {\n        Evergage.DisplayUtils.unbind(buildBindId(context));\n        Evergage.cashDom(\"#evg-exit-intent-popup-email-capture\").remove();\n    }\n\n    function control(context) {\n        return Evergage.DisplayUtils.bind(buildBindId(context)).pageExit(pageExitMillis).then(() => {\n            return true;\n        });\n    }\n\n    registerTemplate({\n        apply: apply,\n        reset: reset,\n        control: control\n    });\n\n})();\n"
        },
        "template.ts": {
            "content": "export class StyleField {\n    label: string;\n    className: string;\n}\n\nexport class ExitIntentPopupWithEmailCapture implements CampaignTemplateComponent {\n\n    @header(\"Pop-Up Type\")\n\n    lightbox: boolean = true;\n\n    @title(\"Background Image URL\")\n    imageUrl: string = \"https://cdn.evergage.com/evergage-content/nto/nto_footwear.jpg\";\n\n    @subtitle(\"Define header and subheader text styling.\")\n    @options([\n        { label: \"Light on Dark\", className: \"evg-light-on-dark\" },\n        { label: \"Dark on Light\", className: \"evg-dark-on-light\" }\n    ])\n    style: StyleField = { label: \"Light on Dark\", className: \"evg-light-on-dark\" };\n\n    header: string = \"Header Text\";\n\n    subheader: string = \"Subheader Text\";\n\n    @title(\"Subheader Visibility\")\n    mainSubheaderVisibility: boolean = true;\n\n    @title(\"CTA Text\")\n    ctaText: string = \"Call To Action\";\n\n    @title(\"Opt-Out Text\")\n    @subtitle(\"Clicking this text closes the pop-up.\")\n    optOutText: string = \"No Thanks\";\n\n    @title(\"Confirmation Screen Header\")\n    @subtitle(\"Text appears upon successful email submission. Click CTA to preview.\")\n    confirmationHeader: string = \"Confirmation Header Text\";\n\n    @title(\"Confirmation Screen Subheader\")\n    confirmationSubheader: string = \"Confirmation Subheader Text\";\n\n    @title(\"Subheader Visibility\")\n    confSubheaderVisibility: boolean = true;\n\n    run(context: CampaignComponentContext) {\n        return {};\n    }\n\n}"
        }
    }
}